{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","key","App","useState","setTodos","newTodoName","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","length","setItem","stringify","newTodoList","ref","onClick","e","todoName","current","value","prevTodo","uuid","incompleteTodos","filter","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIpC,OACC,6BACC,6BACC,2BAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SANxB,WACzBJ,EAAWD,EAAKM,OAMd,8BAAON,EAAKO,QCPD,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACzC,OAAOQ,EAAMC,KAAI,SAAAV,GAChB,OAAO,kBAACD,EAAD,CAAMY,IAAKX,EAAKM,GAAIN,KAAMA,EAAMC,WAAYA,O,6BCyDtCW,MAzDf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNJ,EADM,KACCK,EADD,KAERC,EAAcC,mBA4CpB,OA1CAC,qBAAU,WACT,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QANtB,oBAOlBJ,EAAYK,QAAQT,EAASI,KAC/B,IAEHD,qBACC,WACCI,aAAaG,QAZQ,kBAYiBL,KAAKM,UAAUhB,MAEtD,CAAEA,IAkCF,6BACC,kBAACD,EAAD,CAAUC,MAAOA,EAAOR,WAhCP,SAAAK,GAClB,IAAMoB,EAAW,YAAQjB,GACzBiB,EAAYhB,KAAI,SAAAV,GAEf,OADIA,EAAKM,KAAOA,IAAIN,EAAKI,UAAYJ,EAAKI,UACnCJ,KAERc,EAASY,MA2BR,2BAAOC,IAAKZ,EAAab,KAAK,SAC9B,4BAAQ0B,QAzBa,SAAAC,GACtB,IAAIC,EAAWf,EAAYgB,QAAQC,MAClB,KAAbF,IACJhB,GAAS,SAAAmB,GACR,MAAM,GAAN,mBAAYA,GAAZ,CAAsB,CAAE3B,GAAI4B,MAAQ3B,KAAMuB,EAAU1B,UAAU,QAE/DW,EAAYgB,QAAQC,MAAQ,QAmB3B,YACA,4BAAQJ,QAlBmB,SAAAC,GAC5B,IACMM,EADQ,YAAQ1B,GACW2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YACtDiC,QAAQC,IAAIH,GACZrB,EAASqB,KAcR,kBACA,6BAZsB,SAAAN,GACvB,IACMM,EADQ,YAAQ1B,GACW2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YACtD,OAAO+B,EAAgBZ,OAShBY,GAAN,iBCrDHI,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.7e72b094.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Todo({ todo, toggleTodo }) {\n\tconst handlerToggleTodo = () => {\n\t\ttoggleTodo(todo.id);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<input type=\"checkbox\" checked={todo.complete} onChange={handlerToggleTodo} />\n\t\t\t\t<span>{todo.name}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({ todos, toggleTodo }) {\n\treturn todos.map(todo => {\n\t\treturn <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />;\n\t});\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuid from 'react-uuid';\nimport { getNodeText } from '@testing-library/react';\nconst TODO_SAVED_DATA = 'TODO_SAVED_DATA';\nfunction App() {\n\tconst [ todos, setTodos ] = useState([]);\n\tconst newTodoName = useRef();\n\n\tuseEffect(() => {\n\t\tconst storedTodos = JSON.parse(localStorage.getItem(TODO_SAVED_DATA));\n\t\tif (storedTodos.length) setTodos(storedTodos);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlocalStorage.setItem(TODO_SAVED_DATA, JSON.stringify(todos));\n\t\t},\n\t\t[ todos ]\n\t);\n\n\tconst toggleTodo = id => {\n\t\tconst newTodoList = [ ...todos ];\n\t\tnewTodoList.map(todo => {\n\t\t\tif (todo.id === id) todo.complete = !todo.complete;\n\t\t\treturn todo;\n\t\t});\n\t\tsetTodos(newTodoList);\n\t};\n\n\tconst handlerAddTodo = e => {\n\t\tlet todoName = newTodoName.current.value;\n\t\tif (todoName === '') return;\n\t\tsetTodos(prevTodo => {\n\t\t\treturn [ ...prevTodo, { id: uuid(), name: todoName, complete: false } ];\n\t\t});\n\t\tnewTodoName.current.value = null;\n\t};\n\tconst handlerClearComplete = e => {\n\t\tconst newTodos = [ ...todos ];\n\t\tconst incompleteTodos = newTodos.filter(todo => !todo.complete);\n\t\tconsole.log(incompleteTodos);\n\t\tsetTodos(incompleteTodos);\n\t};\n\n\tconst incompleteTodos = e => {\n\t\tconst newTodos = [ ...todos ];\n\t\tconst incompleteTodos = newTodos.filter(todo => !todo.complete);\n\t\treturn incompleteTodos.length;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<TodoList todos={todos} toggleTodo={toggleTodo} />\n\t\t\t<input ref={newTodoName} type=\"text\" />\n\t\t\t<button onClick={handlerAddTodo}>Add Todo</button>\n\t\t\t<button onClick={handlerClearComplete}>Clear Complete</button>\n\t\t\t<div>{incompleteTodos()} left to do</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}